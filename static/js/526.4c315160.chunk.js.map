{"version":3,"file":"static/js/526.4c315160.chunk.js","mappings":"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","sources":["webpack://netflix-last-clone/./src/components/Layout/navbar.module.css?43cf","webpack://netflix-last-clone/./src/components/Layout/SearchBar.module.css?8186","webpack://netflix-last-clone/./src/components/UI/Modal.module.css?7053","components/UI/Modal.js","webpack://netflix-last-clone/./src/components/Layout/SearchResult.module.css?d464","components/Layout/Search-Result.js","components/Layout/Search.js","components/Layout/navbar.js","webpack://netflix-last-clone/./src/components/Rows/Row.module.css?3bd9","components/Rows/RowItem.js","webpack://netflix-last-clone/./src/components/UI/sekeleton.module.css?09e5","components/UI/skeleton.js","components/Rows/Row.js","components/UI/LoadingSpiner.js","hooks/use-http.js","lib/api.js","webpack://netflix-last-clone/./src/components/UI/Loading.module.css?a16d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"navbar_nav__uUxIB\",\"nav__black\":\"navbar_nav__black__g-73f\",\"navbar\":\"navbar_navbar__RBvFL\",\"navlogo\":\"navbar_navlogo__plGPk\",\"list\":\"navbar_list__bF-ex\",\"home\":\"navbar_home__xoESb\",\"active\":\"navbar_active__x6TF7\",\"tvshows\":\"navbar_tvshows__xUvr8\",\"movies\":\"navbar_movies__-zrvN\",\"mylist\":\"navbar_mylist__P4t40\",\"navavatar\":\"navbar_navavatar__7Mli9\",\"btn\":\"navbar_btn__ubePE\",\"icon\":\"navbar_icon__Ef8wd\",\"close\":\"navbar_close__vH9Cx\",\"search\":\"navbar_search__BZ1Si\",\"list-toggle\":\"navbar_list-toggle__XUrn8\"};","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"SearchBar_field__rCjqD\",\"searchIcon\":\"SearchBar_searchIcon__cTEAJ\",\"result\":\"SearchBar_result__heZvE\",\"nofound\":\"SearchBar_nofound__9VZq0\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__0cVyI\",\"modal\":\"Modal_modal__6QIeB\",\"slide-down\":\"Modal_slide-down__L3gAF\"};","import React from \"react\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        document.getElementById(\"overlays\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        document.getElementById(\"overlays\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"all\":\"SearchResult_all__F-7vi\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./SearchResult.module.css\";\r\nconst SearchResult = (props) => {\r\n  return (\r\n    <Link to={`/netflix-detail/${props.id}`}>\r\n      <div className={classes.all}>\r\n        <img src={props.image} alt={props.title} />\r\n        <h2>{props.title}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import { useState, useEffect } from \"react\";\r\nimport classes from \"./SearchBar.module.css\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Loading from \"../UI/LoadingSpiner\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getNetflixRow } from \"../../lib/api\";\r\nimport SearchResult from \"./Search-Result\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [filterData, setFilterData] = useState([]);\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    error,\r\n    data: loadedResult,\r\n  } = useHttp(getNetflixRow, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(\"All\");\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div style={{ marginRight: \"65rem\" }}>\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!loadedResult || loadedResult.length === 0)) {\r\n    return <p>no Movies Found</p>;\r\n  }\r\n\r\n  const changeFilterHandler = (event) => {\r\n    const enteredTitle = event.target.value;\r\n    const searchTitle = loadedResult.filter((value) => {\r\n      return value.title.toString().toLowerCase().includes(enteredTitle);\r\n    });\r\n    if (enteredTitle === \"\") {\r\n      setFilterData([]);\r\n    } else {\r\n      setFilterData(searchTitle);\r\n    }\r\n  };\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      <div className={classes.field}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          onChange={changeFilterHandler}\r\n          autoFocus\r\n        />\r\n        <AiOutlineSearch className={classes.searchIcon} />\r\n      </div>\r\n\r\n      {filterData.length !== 0 ? (\r\n        <div className={classes.result}>\r\n          {filterData.map((search) => (\r\n            <SearchResult\r\n              key={search.id}\r\n              id={search.id}\r\n              title={search.title}\r\n              image={search.image}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h1 className={classes.nofound}>No Movie Found</h1>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import { useEffect, useState } from \"react\";\r\nimport classes from \"./navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"./580b57fcd9996e24bc43c529.png\";\r\nimport avatar from \"./Netflix-avatar.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Authactions } from \"../../store/auth\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport SearchBar from \"./Search\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst Navbar = () => {\r\n  //const [show, setShow] = useState(false);\r\n  //const [shown, setShown] = useState(false);\r\n  //const [isMenu, setIsMenu] = useState(false);\r\n  //const [onSearch, setOnSearch] = useState(false);\r\n  const [state,setState]=useState({\r\n    show:false,\r\n    shown:false,\r\n    isMenu:false,\r\n    onSearch:false\r\n  })\r\n  const menuDrop = () => {\r\n    //setIsMenu((currentMenu) => !currentMenu);\r\n    setState((prev) => {return {...prev,isMenu:!prev.isMenu}})\r\n  };\r\n\r\n  const searchHandler = () => {\r\n   // setOnSearch((prev) => !prev);\r\n   setState((prev) => {return {...prev,onSearch:!prev.onSearch}})\r\n\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const signoutHandler = () => {\r\n    dispatch(Authactions.logoutHandler());\r\n  };\r\n\r\n  const showSginoutHandler = () => {\r\n//    setShown((prev) => !prev);\r\n    setState((prev) => {return {...prev , shown:!prev.shown}})\r\n};\r\n\r\n  const transNavHandler = () => {\r\n    if (window.scrollY > 100) {\r\n      setState((prev) => {return {...prev,show:true}})\r\n    } else {\r\n      setState((prev) => {return {...prev,show:false}})\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transNavHandler);\r\n    return () => window.removeEventListener(\"scroll\", transNavHandler);\r\n  });\r\n\r\n  return (\r\n    <div className={`${classes.nav} ${state.show && classes[\"nav__black\"]}`}>\r\n      <div className={classes.navbar}>\r\n        <img src={logo} alt=\"logo\" className={classes.navlogo} />\r\n        <nav\r\n          className={`${classes.list}\r\n            ${state.isMenu && classes[\"list-toggle\"]}`}\r\n        >\r\n          <FaTimes className={classes.close} onClick={menuDrop} />\r\n          <NavLink\r\n            to=\"/home\"\r\n            className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n          >\r\n            <h4 className={classes.home}>Home</h4>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/TvShows\"\r\n            className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n          >\r\n            <h4 className={classes.tvshows}>TvShows</h4>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/Movies\"\r\n            className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n          >\r\n            <h4 className={classes.movies}>Movies</h4>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/MyList\"\r\n            className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n          >\r\n            <h4 className={classes.mylist}>MyList</h4>\r\n          </NavLink>\r\n          {!state.onSearch && (\r\n          <AiOutlineSearch className={classes.search} onClick={searchHandler} />\r\n        )}\r\n        </nav>\r\n        <FaBars className={classes.icon} onClick={menuDrop} />\r\n\r\n       \r\n        {state.onSearch && <SearchBar onClose={searchHandler} />}\r\n        <img\r\n          src={avatar}\r\n          alt=\"avatar\"\r\n          className={classes.navavatar}\r\n          onClick={showSginoutHandler}\r\n        />\r\n        {state.shown && (\r\n          <button className={classes.btn} onClick={signoutHandler}>\r\n            SignOut\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"Row_row__Dznzz\",\"row__posters\":\"Row_row__posters__3n+6f\",\"fix\":\"Row_fix__2X+AM\",\"imgg\":\"Row_imgg__0QFnY\",\"forward\":\"Row_forward__WNm+R\",\"backward\":\"Row_backward__rsYMK\",\"backwardIcon\":\"Row_backwardIcon__m3ucQ\",\"forwardIcon\":\"Row_forwardIcon__WPyz8\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { truncate } from \"../../lib/api\";\r\nimport classes from \"./Row.module.css\";\r\nfunction RowItem(props) {\r\n  \r\n  return (\r\n    <Link to={`/netflix-detail/${props.id}`}>\r\n    <div className={classes.fix}>\r\n        <img className={classes.imgg} src={props.image} alt={props.title} />\r\n      <h4>{props.title}</h4>\r\n      <p>{truncate(`${props.descr}`, 50)}</p>\r\n    </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default RowItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"all\":\"sekeleton_all__X2Zg1\",\"first\":\"sekeleton_first__PFaBK\",\"Loading\":\"sekeleton_Loading__Grycm\",\"second\":\"sekeleton_second__-KMr0\",\"third\":\"sekeleton_third__h5gJ-\"};","import React from 'react';\r\nimport classes from './sekeleton.module.css';\r\n\r\nfunction Skeleton() {\r\n  return (\r\n    <div className={classes.all}>\r\n        <div className={classes.first}/>\r\n        <div className={classes.second}/>\r\n        <div className={classes.third}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skeleton","import { Fragment, useEffect, useRef } from \"react\";\r\nimport classes from \"./Row.module.css\";\r\nimport RowItem from \"./RowItem\";\r\nimport { getNetflixRow } from \"../../lib/api\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport Skeleton from \"../UI/skeleton\";\r\nimport { IoChevronForward } from \"react-icons/io5\";\r\nimport { IoChevronBack } from \"react-icons/io5\";\r\n\r\nconst RowNetflix = (props) => {\r\n  const refSlide = useRef();\r\n  const slideHandler = (slider) => {\r\n    refSlide.current.scrollLeft += slider; \r\n  };\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedRow,\r\n    error,\r\n  } = useHttp(getNetflixRow, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(props.type);\r\n  }, [sendRequest, props.type]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <Skeleton />\r\n        <Skeleton />\r\n        <Skeleton />\r\n        <Skeleton />\r\n        <Skeleton />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!loadedRow || loadedRow.length === 0)) {\r\n    return <p>no Movies Found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.row}>\r\n        <h2>{props.overview}</h2>\r\n        <div className={classes[\"row__posters\"]} ref={refSlide}>\r\n          {loadedRow.map((movie) => (\r\n            <RowItem\r\n              key={movie.id}\r\n              id={movie.id}\r\n              image={movie.image}\r\n              title={movie.title}\r\n              descr={movie.descr}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className={classes.forward}>\r\n          <IoChevronForward className={classes.forwardIcon} onClick={()=>{slideHandler(1200)}}/>\r\n        </div>\r\n        <div className={classes.backward}>\r\n          <IoChevronBack className={classes.backwardIcon} onClick={()=>{slideHandler(-1200)}}/>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RowNetflix;\r\n","import { Fragment } from \"react\"\r\nimport classes from './Loading.module.css';\r\nconst LoadingSpiner = () => {\r\n    return <Fragment><div className={classes.bg}>\r\n        <div className={classes.rotate}/>\r\n        </div></Fragment>\r\n}\r\nexport default LoadingSpiner","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","export const FIREBASE_DOMAIN = 'https://react-netflix-d1099-default-rtdb.firebaseio.com';\nexport const truncate = (string, n) => {\n  return string.length > n ? string.substr(0, n - 1) + \"...\" : string;\n};\n\nexport async function getNetflixRow(type) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/${type}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleNetflix(movieId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/All/${movieId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedMovie = {\n    id: movieId,\n    ...data,\n  };\n\n  return loadedMovie;\n}\nexport async function addToCart(cartData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/List.json`, {\n    method: 'POST',\n    body: JSON.stringify(cartData),\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rotate\":\"Loading_rotate__ttUPU\",\"spinner\":\"Loading_spinner__7ImP5\"};"],"names":["Backdrop","props","className","classes","onClick","onClose","ModalOverlay","children","ReactDOM","document","getElementById","to","id","src","image","alt","title","useState","filterData","setFilterData","useHttp","getNetflixRow","sendRequest","status","error","loadedResult","data","useEffect","style","marginRight","length","type","placeholder","onChange","event","enteredTitle","target","value","searchTitle","filter","toString","toLowerCase","includes","autoFocus","map","search","show","shown","isMenu","onSearch","state","setState","menuDrop","prev","searchHandler","dispatch","useDispatch","transNavHandler","window","scrollY","addEventListener","removeEventListener","logo","navData","isActive","Search","Authactions","truncate","descr","refSlide","useRef","slideHandler","slider","current","scrollLeft","loadedRow","Fragment","overview","ref","movie","httpReducer","action","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","useCallback","requestData","message","FIREBASE_DOMAIN","string","n","substr","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleNetflix","movieId","loadedMovie"],"sourceRoot":""}